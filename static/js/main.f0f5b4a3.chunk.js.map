{"version":3,"sources":["components/habit.jsx","components/habitAdd.jsx","components/habits.jsx","components/header.jsx","app.jsx","index.js"],"names":["habit","memo","props","name","count","className","onClick","handleIncrement","handleDecrement","class","handleDelete","HabitAdd","inputRef","React","createRef","ref","current","value","onAdd","habits","map","id","handleReset","header","totalCount","App","state","item","setState","console","log","filter","handelAdd","length","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0f5b4a3.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\n\r\nconst habit = memo((props) => {\r\n    // const componentDidMount() {\r\n    //    //컴포넌트가 등록이되었을때 사용자에게 보여질때 \r\n    //     console.log(`habit:${this.props.habit.name} mounted`)\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     //삭제전에 사용자에게 보여지지않을때\r\n    //      console.log(`habit:${this.props.habit.name} unMounted`)\r\n    // }\r\n\r\n    const handleIncrement = () => {\r\n        const { handleIncrement } = props;\r\n        handleIncrement(props.habit);\r\n    };\r\n\r\n    const handleDecrement = () => {\r\n         const { handleDecrement } = props;\r\n        handleDecrement(props.habit);\r\n    };\r\n    const handleDelete = () => {\r\n        props.handleDelete(props.habit)\r\n    };\r\n\r\n    const { name, count } = props.habit;\r\n     return (\r\n            <li className='habit'>\r\n                <span className='habit-name'>{name}</span>\r\n                <span className=\"habit-count\">{count}</span>\r\n                <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-decrease\" onClick={handleDecrement}>\r\n                    <i class=\"fas fa-minus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-delete\" onClick={handleDelete}>\r\n                    <i class=\"fas fa-trash\"></i>\r\n                </button>\r\n            </li>\r\n        )\r\n});\r\n\r\nexport default habit;\r\n\r\n\r\n// import React, { PureComponent } from 'react';\r\n\r\n// class Habit extends PureComponent {\r\n    \r\n//     componentDidMount() {\r\n//        //컴포넌트가 등록이되었을때 사용자에게 보여질때 \r\n//         console.log(`habit:${this.props.habit.name} mounted`)\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         //삭제전에 사용자에게 보여지지않을때\r\n//          console.log(`habit:${this.props.habit.name} unMounted`)\r\n//     }\r\n\r\n//     handleIncrement = () => {\r\n//         const { handleIncrement } = this.props;\r\n//         handleIncrement(this.props.habit);\r\n//     };\r\n\r\n//     handleDecrement = () => {\r\n//          const { handleDecrement } = this.props;\r\n//         handleDecrement(this.props.habit);\r\n//     };\r\n//     handleDelete = () => {\r\n//         this.props.handleDelete(this.props.habit)\r\n//     };\r\n//     render() {\r\n//         const { name, count } = this.props.habit;\r\n//         return (\r\n//             <li className='habit'>\r\n//                 <span className='habit-name'>{name}</span>\r\n//                 <span className=\"habit-count\">{count}</span>\r\n//                 <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n//                     <i className=\"fas fa-plus-square\"></i>\r\n//                 </button>\r\n//                 <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n//                     <i class=\"fas fa-minus-square\"></i>\r\n//                 </button>\r\n//                 <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n//                     <i class=\"fas fa-trash\"></i>\r\n//                 </button>\r\n//             </li>\r\n//         )\r\n//         }\r\n// }\r\n\r\n// export default Habit;","import React, { memo } from 'react';\r\n\r\n//memo는 class형식의 purecompoent와 같은 역활을함\r\nconst HabitAdd = memo((props) => {\r\n     \r\n    const inputRef = React.createRef();\r\n    \r\n    const onSubmit = () => {\r\n        const name = inputRef.current.value;\r\n        name && props.onAdd(name);\r\n        inputRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <div className='habit'>\r\n            <input className='add-input' ref={inputRef} />\r\n            <button className='add-button' onClick={onSubmit}>Add</button>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default HabitAdd;\r\n","import React from 'react';\r\nimport Habit from './habit';\r\nimport HabitAdd from './habitAdd';\r\n\r\nconst habits = (props) => {\r\n    \r\n    const handleIncrement = (habit) => {\r\n       props.handleIncrement(habit)\r\n    };\r\n\r\n    const handleDecrement = (habit) => {\r\n         const { handleDecrement } = props;\r\n        handleDecrement(habit);\r\n    };\r\n    const handleDelete = (habit) => {\r\n        props.handleDelete(habit)\r\n    };\r\n\r\n    const handleReset = () => {\r\n       props.handleReset(habits)\r\n    }\r\n\r\n    const handelAdd = (name) => {\r\n        props.onAdd(name)\r\n    }\r\n\r\n\r\n     return (\r\n            <div>\r\n               <HabitAdd onAdd={handelAdd}/>\r\n            <ul>\r\n                {\r\n                    props.habits.map(habit => (\r\n                        <Habit\r\n                            key={habit.id}\r\n                            habit={habit}\r\n                            handleIncrement={handleIncrement}\r\n                            handleDecrement={handleDecrement}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                        ))\r\n                    }\r\n                    <button className='habits-reset' onClick={handleReset}>Reset All</button>\r\n                </ul>\r\n                </div>\r\n        );\r\n};\r\n\r\nexport default habits;\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import Habit from './habit';\r\n// import HabitAdd from './habitAdd';\r\n\r\n// class Habits extends Component {\r\n//     // state = {\r\n//     //     habits: [\r\n//     //         { id: 1, name: 'Reading', count: 0 },\r\n//     //         { id: 2, name: 'Running', count: 0 },\r\n//     //         { id: 3, name: 'Coding', count: 0 },\r\n//     //     ]\r\n  \r\n//     // }\r\n\r\n//     handleIncrement = (habit) => {\r\n//        this.props.handleIncrement(habit)\r\n//     };\r\n\r\n//      handleDecrement = (habit) => {\r\n//          const { handleDecrement } = this.props;\r\n//         handleDecrement(habit);\r\n//     };\r\n//     handleDelete = (habit) => {\r\n//         this.props.handleDelete(habit)\r\n//     };\r\n\r\n//     handleReset = () => {\r\n//        this.props.handleReset(this.props.habits)\r\n//     }\r\n\r\n//     handelAdd = (name) => {\r\n//         this.props.onAdd(name)\r\n//     }\r\n  \r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                <HabitAdd onAdd={this.handelAdd}/>\r\n//             <ul>\r\n//                 {\r\n//                     this.props.habits.map(habit => (\r\n//                         <Habit\r\n//                             key={habit.id}\r\n//                             habit={habit}\r\n//                             handleIncrement={this.handleIncrement}\r\n//                             handleDecrement={this.handleDecrement}\r\n//                             handleDelete={this.handleDelete}\r\n//                         />\r\n//                         ))\r\n//                     }\r\n//                     <button className='habits-reset' onClick={this.handleReset}>Reset All</button>\r\n//                 </ul>\r\n//                 </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Habits;","import React, { memo } from 'react';\r\n\r\nconst header = memo((props) => {\r\n     return (\r\n            <div className='navbar'>\r\n                <i className='navbar-logo fas fa-leaf'></i>\r\n                <span>Habit Tracker</span>\r\n                <span className='navbar-count'>{props.totalCount}</span>\r\n            </div>\r\n        );\r\n});\r\n\r\nexport default header;\r\n\r\n\r\n\r\n// import React, { PureComponent } from 'react';\r\n// class Header extends PureComponent {\r\n//     render() {\r\n//         return (\r\n//             <div className='navbar'>\r\n//                 <i className='navbar-logo fas fa-leaf'></i>\r\n//                 <span>Habit Tracker</span>\r\n//                 <span className='navbar-count'>{this.props.totalCount}</span>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Header;","// import React, { useCallback, useState } from 'react';\n// import './app.css';\n// import Habits from './components/habits';\n// import Header from './components/header';\n\n// const App = () => {\n//   const [habits, setHabits] = useState([\n//     { id: 1, name: 'Reading', count: 0 },\n//     { id: 2, name: 'Running', count: 0 },\n//     { id: 3, name: 'Coding', count: 0 },\n//   ]);\n\n//   console.log(habits);\n//   const handleIncrement = useCallback((habit) => {\n//     habits.map(item => {\n//       if (item.id === habit.id) {\n//         return { ...habit, count: habit.count + 1 };\n//       }\n//       return item;\n//     });\n//     setHabits({ habits })\n//   },[]);\n\n//   const handleDecrement = (habit) => {\n//     const habits = habits.map(item => {\n//       if (item.id === habit.id) {\n//         const count = habit.count - 1;\n//         return { ...habit, count: count < 0 ? 0 : count };\n//       }\n//       return item;\n//     })\n//     setHabits({ habits })\n//   };\n\n//   const handleDelete = (habit) => {\n//     console.log('handlDelete', habit);\n//     habits.filter(item => item.id !== habit.id);\n//     setHabits({ habits })\n//   };\n\n//   const handleReset = () => {\n//     habits.map(item => {\n//       if (item.count > 0) {\n//         return { ...item, count: 0 };\n//       }\n//       return item;\n//     })\n//     setHabits({ habits })\n//   }\n \n//   const handelAdd = (name) => {\n//     const habits = [\n//       ...habits,\n//       { id: habits.length + 1, name: name, count: 0 }\n//     ]\n//     setHabits({ habits })\n//   }\n//   return (\n//       <div>\n//         <Header habits={habits} totalCount={habits.filter(item=> item.count >0).length} />\n//         <Habits\n//           habits={habits}\n//           handleIncrement={handleIncrement}\n//           handleDecrement={handleDecrement}\n//           handleDelete={handleDelete}\n//           handleReset={handleReset}\n//           onAdd={handelAdd}\n//         />\n//       </div>\n//     );\n\n// };\n// export default App;\n\n\nimport React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Header from './components/header';\n\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ]\n  \n  }\n  handleIncrement = habit => {\n    // console.log('handleIncrement', habit);\n    // const habits = [...this.state.habits]; //새로운 state 안에 있는 habits를 복사\n    // const index = habits.indexOf(habit); //인덱스값을 알아낼수있는 함수 indexOf를 사용하여 habit이 몇번째 값인지 알아낸다\n    // habits[index].count++;//새로운 habits에 인덱스 번째의 count를 1더한다\n    // this.setState({ habit: habit })//키 : 속성값\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n     this.setState({ habits })\n  };\n\n  handleDecrement = (habit) => {\n    // console.log('handleDecrement', habit);\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // habits[index].count = habits[index].count - 1 < 0 ? 0 : habits[index].count - 1;\n    // this.setState({ habits: habits });\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      }\n      return item;\n    })\n    this.setState({habits})\n  };\n\n  handleDelete = (habit) => {\n    console.log('handlDelete', habit);\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // console.log(index)\n    // habits.splice(habits[index],1)\n    // habits.filter(habits[index])\n    // this.setState({ habits: habits });\n    const habits = this.state.habits.filter(item => item.id !== habit.id);\n    this.setState({ habits: habits })\n  };\n\n  handleReset = () => {\n    // console.log('reset', habit)\n    // const habits = [...this.state.habits]\n    // habits.map(habit => (\n    //   habit.count=0\n    // ))\n    // this.setState({ habits })\n    const habits = this.state.habits.map(item => {\n      if (item.count > 0) {\n        return { ...item, count: 0 };\n      }\n      return item;\n    })\n    this.setState({habits})\n  }\n  //inputRef = React.createRef();\n  // onSubmit = (e) => {\n  //   console.log(this.inputRef.current.value)\n  //   const name = this.inputRef.current.value\n  //   const habits = [...this.state.habits, {id:this.state.habits.length+1,name:name,count:0}]\n  //   this.setState({\n  //    habits:habits\n  //   })\n  //   this.inputRef.current.value = '';\n  // }\n  handelAdd = (name) => {\n    const habits = [\n      ...this.state.habits,\n      { id: this.state.habits.length + 1, name: name, count: 0 }\n    ]\n    this.setState({\n     habits:habits\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Header habits={this.state.habits} totalCount={this.state.habits.filter(item=> item.count >0).length} />\n        <Habits\n          habits={this.state.habits}\n          handleIncrement={this.handleIncrement}\n          handleDecrement={this.handleDecrement}\n          handleDelete={this.handleDelete}\n          handleReset={this.handleReset}\n          onAdd={this.handelAdd}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app.jsx';\nimport '@fortawesome/fontawesome-free/js/all.js';\n//import SimpleHabit from './components/simpleHabit';\nReactDOM.render(\n  //코딩 하다가 에러가 나며 밑에꺼가 에러메세지로 알려줌\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}